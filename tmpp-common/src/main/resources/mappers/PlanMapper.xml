<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.sl.tmpp.common.mapper.PlanMapper">
    <resultMap id="BaseResultMap" type="top.sl.tmpp.common.entity.Plan">
        <constructor>
            <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="colleges_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="course_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="course_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="start_pro" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="type" javaType="java.lang.Boolean" jdbcType="BIT"/>
            <arg column="clazz" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="clazz_number" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="teacher" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="execute_plan_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="gmt_create" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="gmt_modified" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>
    <resultMap id="CourseDTOResultMap" type="top.sl.tmpp.common.pojo.CourseDTO">
        <constructor>
            <arg column="course_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="course_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
            id,
            colleges_id,
            course_code,
            course_name,
            start_pro,
            type,
            clazz,
            clazz_number,
            teacher,
            remark,
            execute_plan_id,
            gmt_create,
            gmt_modified
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from plan
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from plan
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="top.sl.tmpp.common.entity.Plan">
        insert into plan (id, colleges_id, course_code,
                          course_name, start_pro, type,
                          clazz, clazz_number, teacher,
                          remark, execute_plan_id, gmt_create,
                          gmt_modified)
        values (#{id,jdbcType=VARCHAR}, #{collegesId,jdbcType=VARCHAR}, #{courseCode,jdbcType=VARCHAR},
                #{courseName,jdbcType=VARCHAR}, #{startPro,jdbcType=VARCHAR}, #{type,jdbcType=BIT},
                #{clazz,jdbcType=VARCHAR}, #{clazzNumber,jdbcType=INTEGER}, #{teacher,jdbcType=VARCHAR},
                #{remark,jdbcType=VARCHAR}, #{executePlanId,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP},
                #{gmtModified,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="top.sl.tmpp.common.entity.Plan">
        insert into plan
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="collegesId != null">
                colleges_id,
            </if>
            <if test="courseCode != null">
                course_code,
            </if>
            <if test="courseName != null">
                course_name,
            </if>
            <if test="startPro != null">
                start_pro,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="clazz != null">
                clazz,
            </if>
            <if test="clazzNumber != null">
                clazz_number,
            </if>
            <if test="teacher != null">
                teacher,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="executePlanId != null">
                execute_plan_id,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="collegesId != null">
                #{collegesId,jdbcType=VARCHAR},
            </if>
            <if test="courseCode != null">
                #{courseCode,jdbcType=VARCHAR},
            </if>
            <if test="courseName != null">
                #{courseName,jdbcType=VARCHAR},
            </if>
            <if test="startPro != null">
                #{startPro,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=BIT},
            </if>
            <if test="clazz != null">
                #{clazz,jdbcType=VARCHAR},
            </if>
            <if test="clazzNumber != null">
                #{clazzNumber,jdbcType=INTEGER},
            </if>
            <if test="teacher != null">
                #{teacher,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="executePlanId != null">
                #{executePlanId,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="top.sl.tmpp.common.entity.Plan">
        update plan
        <set>
            <if test="collegesId != null">
                colleges_id = #{collegesId,jdbcType=VARCHAR},
            </if>
            <if test="courseCode != null">
                course_code = #{courseCode,jdbcType=VARCHAR},
            </if>
            <if test="courseName != null">
                course_name = #{courseName,jdbcType=VARCHAR},
            </if>
            <if test="startPro != null">
                start_pro = #{startPro,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=BIT},
            </if>
            <if test="clazz != null">
                clazz = #{clazz,jdbcType=VARCHAR},
            </if>
            <if test="clazzNumber != null">
                clazz_number = #{clazzNumber,jdbcType=INTEGER},
            </if>
            <if test="teacher != null">
                teacher = #{teacher,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="executePlanId != null">
                execute_plan_id = #{executePlanId,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="top.sl.tmpp.common.entity.Plan">
        update plan
        set colleges_id     = #{collegesId,jdbcType=VARCHAR},
            course_code     = #{courseCode,jdbcType=VARCHAR},
            course_name     = #{courseName,jdbcType=VARCHAR},
            start_pro       = #{startPro,jdbcType=VARCHAR},
            type            = #{type,jdbcType=BIT},
            clazz           = #{clazz,jdbcType=VARCHAR},
            clazz_number    = #{clazzNumber,jdbcType=INTEGER},
            teacher         = #{teacher,jdbcType=VARCHAR},
            remark          = #{remark,jdbcType=VARCHAR},
            execute_plan_id = #{executePlanId,jdbcType=VARCHAR},
            gmt_create      = #{gmtCreate,jdbcType=TIMESTAMP},
            gmt_modified    = #{gmtModified,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <select id="countByCourseId" resultType="long">
        select count(*)
        from plan
        where course_code = #{courseId,jdbcType=VARCHAR}
    </select>
    <select id="selectByExecutePlanId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from plan where execute_plan_id = #{id,jdbcType=VARCHAR}
    </select>
    <select id="selectByExecutePlanIdAndCourseCode" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from plan where execute_plan_id = #{executePlanId,jdbcType=VARCHAR} and course_code =
        #{courseCode,jdbcType=VARCHAR}
    </select>
    <select id="selectCourseByExecutePlanId" resultMap="CourseDTOResultMap">
        SELECT DISTINCT course_code,
                        course_name
        FROM plan
        WHERE execute_plan_id = #{executePlanId,jdbcType=VARCHAR}
    </select>
    <select id="selectAllByExecutePlanGroupByBookId" resultType="java.lang.String">
        SELECT plan_book.book_id
        FROM plan
                 LEFT JOIN plan_book ON plan_book.plan_id = plan.id
        WHERE execute_plan_id = #{executePlanId,jdbcType=VARCHAR}
        GROUP BY plan_book.book_id;
    </select>
</mapper>
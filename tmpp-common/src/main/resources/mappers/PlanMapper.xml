<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.sl.tmpp.common.mapper.PlanMapper">
  <resultMap id="BaseResultMap" type="top.sl.tmpp.common.entity.Plan">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="year" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="term" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="level_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="college_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="department_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="course_major" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="course_type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="use_school_year" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="clazz" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="clazz_number" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="teacher" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, year, term, level_id, college_id, department_id, course_major, course_type, use_school_year, 
    clazz, clazz_number, teacher
  </sql>
  <select id="selectByExample" parameterType="top.sl.tmpp.common.entity.PlanExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from plan
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from plan
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="top.sl.tmpp.common.entity.PlanExample">
    delete from plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.sl.tmpp.common.entity.Plan">
    insert into plan (id, year, term, 
      level_id, college_id, department_id, 
      course_major, course_type, use_school_year, 
      clazz, clazz_number, teacher
      )
    values (#{id,jdbcType=VARCHAR}, #{year,jdbcType=VARCHAR}, #{term,jdbcType=INTEGER}, 
      #{levelId,jdbcType=VARCHAR}, #{collegeId,jdbcType=VARCHAR}, #{departmentId,jdbcType=VARCHAR}, 
      #{courseMajor,jdbcType=VARCHAR}, #{courseType,jdbcType=INTEGER}, #{useSchoolYear,jdbcType=VARCHAR}, 
      #{clazz,jdbcType=VARCHAR}, #{clazzNumber,jdbcType=INTEGER}, #{teacher,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="top.sl.tmpp.common.entity.Plan">
    insert into plan
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="term != null">
        term,
      </if>
      <if test="levelId != null">
        level_id,
      </if>
      <if test="collegeId != null">
        college_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="courseMajor != null">
        course_major,
      </if>
      <if test="courseType != null">
        course_type,
      </if>
      <if test="useSchoolYear != null">
        use_school_year,
      </if>
      <if test="clazz != null">
        clazz,
      </if>
      <if test="clazzNumber != null">
        clazz_number,
      </if>
      <if test="teacher != null">
        teacher,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        #{year,jdbcType=VARCHAR},
      </if>
      <if test="term != null">
        #{term,jdbcType=INTEGER},
      </if>
      <if test="levelId != null">
        #{levelId,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null">
        #{collegeId,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="courseMajor != null">
        #{courseMajor,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null">
        #{courseType,jdbcType=INTEGER},
      </if>
      <if test="useSchoolYear != null">
        #{useSchoolYear,jdbcType=VARCHAR},
      </if>
      <if test="clazz != null">
        #{clazz,jdbcType=VARCHAR},
      </if>
      <if test="clazzNumber != null">
        #{clazzNumber,jdbcType=INTEGER},
      </if>
      <if test="teacher != null">
        #{teacher,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.sl.tmpp.common.entity.PlanExample" resultType="java.lang.Long">
    select count(*) from plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update plan
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=VARCHAR},
      </if>
      <if test="record.term != null">
        term = #{record.term,jdbcType=INTEGER},
      </if>
      <if test="record.levelId != null">
        level_id = #{record.levelId,jdbcType=VARCHAR},
      </if>
      <if test="record.collegeId != null">
        college_id = #{record.collegeId,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.courseMajor != null">
        course_major = #{record.courseMajor,jdbcType=VARCHAR},
      </if>
      <if test="record.courseType != null">
        course_type = #{record.courseType,jdbcType=INTEGER},
      </if>
      <if test="record.useSchoolYear != null">
        use_school_year = #{record.useSchoolYear,jdbcType=VARCHAR},
      </if>
      <if test="record.clazz != null">
        clazz = #{record.clazz,jdbcType=VARCHAR},
      </if>
      <if test="record.clazzNumber != null">
        clazz_number = #{record.clazzNumber,jdbcType=INTEGER},
      </if>
      <if test="record.teacher != null">
        teacher = #{record.teacher,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update plan
    set id = #{record.id,jdbcType=VARCHAR},
      year = #{record.year,jdbcType=VARCHAR},
      term = #{record.term,jdbcType=INTEGER},
      level_id = #{record.levelId,jdbcType=VARCHAR},
      college_id = #{record.collegeId,jdbcType=VARCHAR},
      department_id = #{record.departmentId,jdbcType=VARCHAR},
      course_major = #{record.courseMajor,jdbcType=VARCHAR},
      course_type = #{record.courseType,jdbcType=INTEGER},
      use_school_year = #{record.useSchoolYear,jdbcType=VARCHAR},
      clazz = #{record.clazz,jdbcType=VARCHAR},
      clazz_number = #{record.clazzNumber,jdbcType=INTEGER},
      teacher = #{record.teacher,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.sl.tmpp.common.entity.Plan">
    update plan
    <set>
      <if test="year != null">
        year = #{year,jdbcType=VARCHAR},
      </if>
      <if test="term != null">
        term = #{term,jdbcType=INTEGER},
      </if>
      <if test="levelId != null">
        level_id = #{levelId,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null">
        college_id = #{collegeId,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="courseMajor != null">
        course_major = #{courseMajor,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null">
        course_type = #{courseType,jdbcType=INTEGER},
      </if>
      <if test="useSchoolYear != null">
        use_school_year = #{useSchoolYear,jdbcType=VARCHAR},
      </if>
      <if test="clazz != null">
        clazz = #{clazz,jdbcType=VARCHAR},
      </if>
      <if test="clazzNumber != null">
        clazz_number = #{clazzNumber,jdbcType=INTEGER},
      </if>
      <if test="teacher != null">
        teacher = #{teacher,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.sl.tmpp.common.entity.Plan">
    update plan
    set year = #{year,jdbcType=VARCHAR},
      term = #{term,jdbcType=INTEGER},
      level_id = #{levelId,jdbcType=VARCHAR},
      college_id = #{collegeId,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=VARCHAR},
      course_major = #{courseMajor,jdbcType=VARCHAR},
      course_type = #{courseType,jdbcType=INTEGER},
      use_school_year = #{useSchoolYear,jdbcType=VARCHAR},
      clazz = #{clazz,jdbcType=VARCHAR},
      clazz_number = #{clazzNumber,jdbcType=INTEGER},
      teacher = #{teacher,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.sl.tmpp.common.mapper.PlanMapper">
    <resultMap id="BaseResultMap" type="top.sl.tmpp.common.entity.Plan">
        <constructor>
            <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="colleges_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="start_pro" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="course_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="type" javaType="java.lang.Boolean" jdbcType="BIT"/>
            <arg column="clazz" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="clazz_number" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="teacher" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="execute_plan_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="gmt_create" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="gmt_modified" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
            id,
            colleges_id,
            start_pro,
            course_id,
            type,
            clazz,
            clazz_number,
            teacher,
            remark,
            execute_plan_id,
            gmt_create,
            gmt_modified
    </sql>
    <select id="selectByExample" parameterType="top.sl.tmpp.common.entity.PlanExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from plan
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from plan
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from plan
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="top.sl.tmpp.common.entity.PlanExample">
        delete from plan
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="top.sl.tmpp.common.entity.Plan">
        insert into plan (id, colleges_id, start_pro,
                          course_id, type, clazz,
                          clazz_number, teacher, remark,
                          execute_plan_id, gmt_create, gmt_modified)
        values (#{id,jdbcType=VARCHAR}, #{collegesId,jdbcType=VARCHAR}, #{startPro,jdbcType=VARCHAR},
                #{courseId,jdbcType=VARCHAR}, #{type,jdbcType=BIT}, #{clazz,jdbcType=VARCHAR},
                #{clazzNumber,jdbcType=INTEGER}, #{teacher,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
                #{executePlanId,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="top.sl.tmpp.common.entity.Plan">
        insert into plan
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="collegesId != null">
                colleges_id,
            </if>
            <if test="startPro != null">
                start_pro,
            </if>
            <if test="courseId != null">
                course_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="clazz != null">
                clazz,
            </if>
            <if test="clazzNumber != null">
                clazz_number,
            </if>
            <if test="teacher != null">
                teacher,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="executePlanId != null">
                execute_plan_id,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="collegesId != null">
                #{collegesId,jdbcType=VARCHAR},
            </if>
            <if test="startPro != null">
                #{startPro,jdbcType=VARCHAR},
            </if>
            <if test="courseId != null">
                #{courseId,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=BIT},
            </if>
            <if test="clazz != null">
                #{clazz,jdbcType=VARCHAR},
            </if>
            <if test="clazzNumber != null">
                #{clazzNumber,jdbcType=INTEGER},
            </if>
            <if test="teacher != null">
                #{teacher,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="executePlanId != null">
                #{executePlanId,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="top.sl.tmpp.common.entity.PlanExample" resultType="java.lang.Long">
        select count(*) from plan
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update plan
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.collegesId != null">
                colleges_id = #{record.collegesId,jdbcType=VARCHAR},
            </if>
            <if test="record.startPro != null">
                start_pro = #{record.startPro,jdbcType=VARCHAR},
            </if>
            <if test="record.courseId != null">
                course_id = #{record.courseId,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=BIT},
            </if>
            <if test="record.clazz != null">
                clazz = #{record.clazz,jdbcType=VARCHAR},
            </if>
            <if test="record.clazzNumber != null">
                clazz_number = #{record.clazzNumber,jdbcType=INTEGER},
            </if>
            <if test="record.teacher != null">
                teacher = #{record.teacher,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.executePlanId != null">
                execute_plan_id = #{record.executePlanId,jdbcType=VARCHAR},
            </if>
            <if test="record.gmtCreate != null">
                gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.gmtModified != null">
                gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update plan
        set id = #{record.id,jdbcType=VARCHAR},
        colleges_id = #{record.collegesId,jdbcType=VARCHAR},
        start_pro = #{record.startPro,jdbcType=VARCHAR},
        course_id = #{record.courseId,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=BIT},
        clazz = #{record.clazz,jdbcType=VARCHAR},
        clazz_number = #{record.clazzNumber,jdbcType=INTEGER},
        teacher = #{record.teacher,jdbcType=VARCHAR},
        remark = #{record.remark,jdbcType=VARCHAR},
        execute_plan_id = #{record.executePlanId,jdbcType=VARCHAR},
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="top.sl.tmpp.common.entity.Plan">
        update plan
        <set>
            <if test="collegesId != null">
                colleges_id = #{collegesId,jdbcType=VARCHAR},
            </if>
            <if test="startPro != null">
                start_pro = #{startPro,jdbcType=VARCHAR},
            </if>
            <if test="courseId != null">
                course_id = #{courseId,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=BIT},
            </if>
            <if test="clazz != null">
                clazz = #{clazz,jdbcType=VARCHAR},
            </if>
            <if test="clazzNumber != null">
                clazz_number = #{clazzNumber,jdbcType=INTEGER},
            </if>
            <if test="teacher != null">
                teacher = #{teacher,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="executePlanId != null">
                execute_plan_id = #{executePlanId,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="top.sl.tmpp.common.entity.Plan">
        update plan
        set colleges_id     = #{collegesId,jdbcType=VARCHAR},
            start_pro       = #{startPro,jdbcType=VARCHAR},
            course_id       = #{courseId,jdbcType=VARCHAR},
            type            = #{type,jdbcType=BIT},
            clazz           = #{clazz,jdbcType=VARCHAR},
            clazz_number    = #{clazzNumber,jdbcType=INTEGER},
            teacher         = #{teacher,jdbcType=VARCHAR},
            remark          = #{remark,jdbcType=VARCHAR},
            execute_plan_id = #{executePlanId,jdbcType=VARCHAR},
            gmt_create      = #{gmtCreate,jdbcType=TIMESTAMP},
            gmt_modified    = #{gmtModified,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>
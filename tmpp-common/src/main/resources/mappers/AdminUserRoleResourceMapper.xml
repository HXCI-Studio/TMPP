<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.sl.tmpp.common.mapper.AdminUserRoleResourceMapper">
  <resultMap id="BaseResultMap" type="top.sl.tmpp.common.entity.AdminUserRoleResource">
    <constructor>
      <idArg column="user_role_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="resource_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="gmt_create" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="gmt_modified" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_role_id, resource_id, gmt_create, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="top.sl.tmpp.common.entity.AdminUserRoleResourceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin_user_role_resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="top.sl.tmpp.common.entity.AdminUserRoleResourceKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin_user_role_resource
    where user_role_id = #{userRoleId,jdbcType=INTEGER}
      and resource_id = #{resourceId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="top.sl.tmpp.common.entity.AdminUserRoleResourceKey">
    delete from admin_user_role_resource
    where user_role_id = #{userRoleId,jdbcType=INTEGER}
      and resource_id = #{resourceId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="top.sl.tmpp.common.entity.AdminUserRoleResourceExample">
    delete from admin_user_role_resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.sl.tmpp.common.entity.AdminUserRoleResource">
    insert into admin_user_role_resource (user_role_id, resource_id, gmt_create, 
      gmt_modified)
    values (#{userRoleId,jdbcType=INTEGER}, #{resourceId,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="top.sl.tmpp.common.entity.AdminUserRoleResource">
    insert into admin_user_role_resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userRoleId != null">
        user_role_id,
      </if>
      <if test="resourceId != null">
        resource_id,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userRoleId != null">
        #{userRoleId,jdbcType=INTEGER},
      </if>
      <if test="resourceId != null">
        #{resourceId,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.sl.tmpp.common.entity.AdminUserRoleResourceExample" resultType="java.lang.Long">
    select count(*) from admin_user_role_resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update admin_user_role_resource
    <set>
      <if test="record.userRoleId != null">
        user_role_id = #{record.userRoleId,jdbcType=INTEGER},
      </if>
      <if test="record.resourceId != null">
        resource_id = #{record.resourceId,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update admin_user_role_resource
    set user_role_id = #{record.userRoleId,jdbcType=INTEGER},
      resource_id = #{record.resourceId,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.sl.tmpp.common.entity.AdminUserRoleResource">
    update admin_user_role_resource
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_role_id = #{userRoleId,jdbcType=INTEGER}
      and resource_id = #{resourceId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.sl.tmpp.common.entity.AdminUserRoleResource">
    update admin_user_role_resource
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where user_role_id = #{userRoleId,jdbcType=INTEGER}
      and resource_id = #{resourceId,jdbcType=VARCHAR}
  </update>
</mapper>